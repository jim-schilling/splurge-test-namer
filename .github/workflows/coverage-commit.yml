name: Coverage Badge Commit

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  coverage-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Run tests with coverage
        run: |
          python -m pytest -q --cov=splurge_test_namer --cov-report=xml:coverage.xml --cov-report=html:htmlcov
      - name: Compute coverage percent
        id: coverage
        run: |
          python tools/update_coverage_badge.py coverage.xml .github/badges/coverage.json
      - name: Update badge JSON
        run: |
          pct=${{ steps.coverage.outputs.coverage_percent }}
          color=lightgrey
          if [ "$pct" != "unknown" ]; then
            color=red
            if (( $(echo "$pct >= 90" | bc -l) )); then color=brightgreen; elif (( $(echo "$pct >= 75" | bc -l) )); then color=yellow; fi
            msg="$pct%"
          else
            msg="unknown"
          fi
          mkdir -p .github/badges
          jq -n --arg label "coverage" --arg message "$msg" --arg color "$color" '{schemaVersion:1, label:$label, message:$message, color:$color}' > .github/badges/coverage.json

      - name: Commit and push badge to main (try)
        id: try-push
        run: |
          set -euo pipefail
          pct=${{ steps.coverage.outputs.coverage_percent }}
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .github/badges/coverage.json || true
          # if no changes staged, nothing to do
          if git diff --staged --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "pushed=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          git commit -m "ci: update coverage badge to ${pct}% [skip ci]" || true
          # Try to push directly to main. If push fails (branch protection), record pushed=false
          if git push origin HEAD:main; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "pushed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "pushed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create PR with updated badge (fallback)
        if: steps.try-push.outputs.pushed != 'true' && steps.try-push.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "ci: update coverage badge to ${{ steps.coverage.outputs.coverage_percent }}%"
          branch: "ci/coverage-badge-${{ github.run_id }}"
          title: "ci: update coverage badge"
          body: |
            This PR updates the coverage badge based on the latest test run (coverage: ${{ steps.coverage.outputs.coverage_percent }}%).
          labels: ci,coverage
